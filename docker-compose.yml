services:
  geoip:
    build:
      context: ./
      dockerfile: docker/common/geoIp/Dockerfile
    restart: unless-stopped
    ports:
    - "8044:80"
  php:
    build:
      context: .
    image: story-song-php:latest
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./:/var/www/html
    networks:
      - web

  nginx:
    image: nginx:1.25-alpine
    depends_on:
      - php
    restart: unless-stopped
    environment:
      DOMAIN: ${DOMAIN}
    command: ["/bin/sh", "/docker-entrypoint-cert-reload.sh"]
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./nginx/entrypoint.sh:/docker-entrypoint-cert-reload.sh:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./:/var/www/html:ro
      - certbot_certs:/etc/letsencrypt
      - certbot_challenges:/var/www/certbot
    networks:
      - web

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_challenges:/var/www/certbot
      - certbot_logs:/var/log/letsencrypt
    networks:
      - web

  certbot-renew:
    image: certbot/certbot:latest
    depends_on:
      - nginx
    restart: unless-stopped
    entrypoint: /bin/sh
    command: -c "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h & wait $${!}; done"
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_challenges:/var/www/certbot
      - certbot_logs:/var/log/letsencrypt
    networks:
      - web

networks:
  web:
    driver: bridge

volumes:
  certbot_certs:
  certbot_challenges:
  certbot_logs:
